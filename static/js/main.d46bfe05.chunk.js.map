{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","id","email","className","src","alt","CardList","robots","map","robot","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflow","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","useState","setRobots","setSearchfield","count","setCount","useEffect","fetch","then","response","json","users","console","log","filteredRobots","filter","toLowerCase","includes","length","onClick","event","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"iMAgBeA,EAdH,SAACC,GAAS,IACXC,EAAmBD,EAAnBC,KAAMC,EAAaF,EAAbE,GAAIC,EAASH,EAATG,MACjB,OACI,qBAAKC,UAAU,sDAAf,SACI,gCACI,qBAAKC,IAAG,+BAA0BH,EAA1B,WAAuCI,IAAI,WACnD,gCACI,6BAAKL,IACL,4BAAIE,aCKTI,EAXE,SAAC,GAAY,IAAXC,EAAU,EAAVA,OAEf,OACI,8BACKA,EAAOC,KAAI,SAACC,EAAOC,GAChB,OAAQ,cAAC,EAAD,CAAcT,GAAIQ,EAAMR,GAAID,KAAMS,EAAMT,KAAME,MAAOO,EAAMP,OAAhDQ,SCKpBC,EAZG,SAAC,GAA8B,EAA7BC,YAA8B,IAAjBC,EAAgB,EAAhBA,aAC7B,OACI,qBAAKV,UAAU,MAAf,SACI,uBACAA,UAAU,mCACVW,KAAK,SAASC,YAAY,gBAC1BC,SAAUH,OCEPI,EARA,SAAClB,GACZ,OACI,qBAAKmB,MAAO,CAACC,SAAS,SAAUC,OAAO,kBAAmBC,OAAO,SAAjE,SACKtB,EAAMuB,Y,4BCiBJC,E,kDAnBX,WAAYxB,GAAO,IAAD,8BACd,cAAMA,IACDyB,MAAO,CACRC,UAAS,GAHC,E,qDAOlB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG7B,WACI,OAAGG,KAAKJ,MAAMC,SACH,0DAEJG,KAAK7B,MAAMuB,a,GAhBEQ,a,MC8CbC,MAvCf,WAAe,IAAD,EACkBC,mBAAS,IAD3B,mBACHzB,EADG,KACK0B,EADL,OAE4BD,mBAAS,IAFrC,mBAEHpB,EAFG,KAEUsB,EAFV,OAGgBF,mBAAS,GAHzB,mBAGHG,EAHG,KAGIC,EAHJ,KAMVC,qBAAU,WACNC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAST,EAAUS,MACzBC,QAAQC,IAAIT,KACd,CAACA,IAEH,IAMMU,EAAgBtC,EAAOuC,QAAO,SAAArC,GAC5B,OAAOA,EAAMT,KAAK+C,cAAcC,SAASpC,EAAYmC,kBAGzD,OAAQxC,EAAO0C,OAEP,sBAAK9C,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,0BACA,wBAAQ+C,QAAS,kBAAId,EAASD,EAAM,IAApC,uBACA,cAAC,EAAD,CAAWtB,aAfJ,SAACsC,GAClBjB,EAAeiB,EAAMC,OAAOC,UAelB,cAAC,EAAD,UACE,cAAC,EAAD,UACI,cAAC,EAAD,CAAU9C,OAAQsC,WAP9B,0CCrBGS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.d46bfe05.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Card =(props)=>{\n    const {name, id, email} = props\n    return (\n        <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n            <div>\n                <img src={`https://robohash.org/${id}200x200`} alt='robots' />\n                <div>\n                    <h2>{name}</h2>\n                    <p>{email}</p>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Card","import React from \"react\";\nimport Card from './Card'\n\n\nconst CardList = ({robots})=>{\n\n    return (\n        <div>\n            {robots.map((robot, i)=>{\n                return (<Card key={i} id={robot.id} name={robot.name} email={robot.email}/>)\n            })}\n             \n        </div>\n    )\n}\nexport default CardList","import React from 'react'\n\nconst SearchBox = ({searchfield, searchChange})=>{\n    return (\n        <div className='pa2'>\n            <input\n            className=\"pa3 ba b--green bg-lightest-blue\" \n            type=\"search\" placeholder=\"search robots\"\n            onChange={searchChange}\n            />\n        </div>\n    )\n}\n\nexport default SearchBox;","import React from 'react'\n\nconst Scroll = (props)=>{\n    return (\n        <div style={{overflow:'scroll', border:'5px solid black', height:'800px'}}>\n            {props.children}\n        </div>\n    )\n}\n\nexport default Scroll;\n","import React, {Component} from 'react'\n\nclass ErrorBoundary extends Component {\n    constructor(props){\n        super(props)\n        this.state ={\n            hasError:false\n        }\n    }\n\n    componentDidCatch(error, info){\n        this.setState({hasError: true})\n    }\n\n    render(){\n        if(this.state.hasError){\n            return <h1>Oooops. That is not good</h1>\n        }\n        return this.props.children\n    }\n}\n\nexport default ErrorBoundary;","import React, {useState, useEffect} from 'react'\nimport CardList from '../components/CardList'\nimport SearchBox from '../components/SearchBox'\nimport Scroll from '../components/Scroll'\nimport ErrorBoundary from '../components/ErrorBoundary'\nimport './App.css'\n\n\n\nfunction App(){\n    const [robots, setRobots] = useState([])\n    const [searchfield, setSearchfield] = useState('')\n    const [count, setCount] = useState(0)\n   \n    //Run after render execute\n    useEffect(()=>{\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response=>response.json())\n        .then(users=> {setRobots(users)}) \n        console.log(count)      \n    },[count])\n    \n    const onSearchChange=(event)=>{\n        setSearchfield(event.target.value)\n       \n    }\n\n   \n    const filteredRobots= robots.filter(robot=>{\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())\n    })\n     \n        return !robots.length? \n            <h1>Loading</h1> :(\n                <div className=\"tc\">\n                  <h1 className=\"f1\">RobotFriends</h1>\n                  <button onClick={()=>setCount(count+1)}>Click Me!</button>\n                  <SearchBox searchChange={onSearchChange} />\n                  <Scroll>\n                    <ErrorBoundary>\n                        <CardList robots={filteredRobots} />\n                    </ErrorBoundary>\n                  </Scroll>\n                </div>\n            )\n      \n   \n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}